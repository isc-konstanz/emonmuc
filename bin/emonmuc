#!/bin/bash
#Scriptname: openmuc
#Description: Script to start, stop, restart and reload OpenMUC

# Optionally set the location of the openmuc framework. If the
# variable is not set, it is assumed that this script is located
# within the "bin" folder of the openmuc framework folder.
#EMONMUC_DIR="/opt/emonmuc/"
OPENMUC_DIR="/opt/openmuc"


find_home_dir() {
    # Attempt to set OPENMUC_DIR
    # Resolve links: $0 may be a link
    PRG="$0"
    # Need this for relative symlinks.
    while [ -h "$PRG" ] ; do
        ls=`ls -ld "$PRG"`
        link=`expr "$ls" : '.*-> \(.*\)$'`
        if expr "$link" : '/.*' > /dev/null; then
            PRG="$link"
        else
            PRG=`dirname "$PRG"`"/$link"
        fi
    done
    SAVED="`pwd`"
    cd "`dirname \"$PRG\"`/.." >/dev/null
    EMONMUC_DIR="`pwd -P`"
    cd "$SAVED" >/dev/null
}

if [ -z ${EMONMUC_DIR+x} ]; then
    find_home_dir
fi
cd "$EMONMUC_DIR"

EMONMUC_USER=`stat -c "%U" bin/openmuc`
EMONMUC_UID=`id -u $OPENMUC_USER`

# If root change user to owner of this script
if [ ! $UID -eq $EMONMUC_UID ]; then
    echo "Not executed as owner of this script and will be restarted as user: $EMONMUC_USER"
    exec sudo -u $EMONMUC_USER bin/emonmuc "$@"
fi

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ]; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVA_CMD="$JAVA_HOME/jre/sh/java"
    else
        JAVA_CMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVA_CMD" ] ; then
        echo "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
        exit 1
    fi
else
    JAVA_CMD="java"
    type java >/dev/null 2>&1 || { echo "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."; exit 1; }
fi

case "$1" in
    start | stop | restart | reload | shell)
        $OPENMUC_DIR/bin/openmuc "$@"
        ;;
    bundles | update | install | remove)
        if [ $# -gt 1 ]; then
            source "$EMONMUC_DIR"/lib/bundle.sh
            bundles $@
        fi
        if ! dpkg -l | grep -q -e openmuc; then
            gradle -b "$EMONMUC_DIR"/build.gradle bundles
		fi
        echo "For the changes to take effect, please restart the framework:
  systemctl restart openmuc"
        ;;
    *)
        echo "Synopsis: emonmuc {start|stop|restart|reload|update|install|remove|shell}"
        exit 1
        ;;
esac
exit 0
